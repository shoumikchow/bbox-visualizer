[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "bbox_visualizer"
version = "0.2.1"
description = "Different ways of visualizing objects given bounding box data"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Shoumik Sharar Chowdhury", email = "shoumikchow@gmail.com" },
]
keywords = ["bbox_visualizer", "computer-vision", "bounding-box", "visualization"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "opencv-python>=4.1.0.25",
    "numpy>=1.19.0",
]

[project.optional-dependencies]
dev = [
    "build>=1.0.3",
    "hatch>=1.7.0",
    "twine>=4.0.2",
    "pytest>=7.4.0",
    "ruff>=0.2.1",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    "docutils>=0.20.1"
]

[project.urls]
Homepage = "https://github.com/shoumikchow/bbox-visualizer"
Repository = "https://github.com/shoumikchow/bbox-visualizer"
Documentation = "https://bbox-visualizer.readthedocs.io"
Changelog = "https://github.com/shoumikchow/bbox-visualizer/releases"

[tool.hatch.build.targets.wheel]
packages = ["bbox_visualizer"]

[tool.hatch.build]
include = [
    "LICENSE",
    "README.md",
    "AUTHORS.md",
    "CODE_OF_CONDUCT.md",
    "CONTRIBUTING.md",
    "bbox_visualizer/**/*.py",
    "tests/**/*.py",
    "docs/**/*.rst",
    "docs/conf.py",
    "docs/Makefile",
    "docs/make.bat",
    "examples/**/*.py",
    "examples/**/*.jpg",
    "examples/**/*.png",
    "images/**/*.jpg",
    "images/**/*.png",
]
exclude = [
    "**/__pycache__",
    "**/.pytest_cache",
    "docs/_build",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
# General settings that apply to all Ruff functionality
line-length = 88
target-version = "py38"
exclude = [
    "docs/*",
    "build/*",
    ".git",
    ".venv",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
# All the rules that were previously enabled plus additional useful ones
select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # Line length is handled by formatter
    "N802",  # Function name should be lowercase
    "N806",  # Variable name should be lowercase
    "N816",  # Variable in global scope should not be mixedCase
    "COM812",  # Missing trailing comma in multiline collection
]
fixable = ["ALL"]
unfixable = []

# Ignore `E402` (import violations) in all `__init__.py` files
per-file-ignores = { "__init__.py" = ["E402"] }

[tool.ruff.lint.isort]
known-first-party = ["bbox_visualizer"] 